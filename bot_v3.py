import subprocess
import telebot
import time
import os
import emoji
import re
from telebot import types

line_name_01 = "01_–°–æ–∫–æ–ª—å–Ω–∏—á–µ—Å–∫–∞—è"
line_name_02 = "02_–ó–∞–º–æ—Å–∫–≤–æ—Ä–µ—Ü–∫–∞—è"
line_name_03 = "03_–ê—Ä–±–∞—Ç—Å–∫–æ-–ü–æ–∫—Ä–æ–≤—Å–∫–∞—è"
line_name_04 = "04_–§–∏–ª—ë–≤—Å–∫–∞—è"
line_name_05 = "05_–ö–æ–ª—å—Ü–µ–≤–∞—è"
line_name_06 = "06_–ö–∞–ª—É–∂—Å–∫–æ-–†–∏–∂—Å–∫–∞—è"
line_name_07 = "07_–¢–∞–≥–∞–Ω—Å–∫–æ-–ö—Ä–∞—Å–Ω–æ–ø—Ä–µ—Å–Ω–µ–Ω—Å–∫–∞—è"
line_name_08 = "08_–ö–∞–ª–∏–Ω–∏–Ω—Å–∫–∞—è"
line_name_09 = "09_–°–µ—Ä–ø—É—Ö–æ–≤—Å–∫–æ-–¢–∏–º–∏—Ä—è–∑–µ–≤—Å–∫–∞—è"
line_name_10 = "10_–õ—é–±–ª–∏–Ω—Å–∫–∞—è"
line_name_11 = "11_–ö–∞—Ö–æ–≤—Å–∫–∞—è"
line_name_12 = "12_–ë—É—Ç–æ–≤—Å–∫–∞—è"

#–û–±—ä—è–≤–ª—è–µ–º ID –±–æ—Ç–∞
bot = telebot.TeleBot("xx")

#–ò–Ω–∏—Ü–∏–∏—Ä—É–µ–º –∏–Ω–ª–∞–π–Ω –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
@bot.message_handler(commands = ['start'])
def inline_kb(message):
    markup = types.InlineKeyboardMarkup(row_width = 1)
    off_button = types.InlineKeyboardButton(text = "–í—ã–∫–ª—é—á–∏—Ç—å —Å–µ—Ä–≤–µ—Ä–∞", callback_data = "off")
    ping_button = types.InlineKeyboardButton(text = "–ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å–µ—Ä–≤–µ—Ä–∞", callback_data = "ping")
    status_button = types.InlineKeyboardButton(text = "–ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å–µ—Ä–≤–µ—Ä –Ω–∞ –æ—à–∏–±–∫–∏", callback_data = "status")
    bye_button = types.InlineKeyboardButton(text = "–û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –±–æ—Ç–∞", callback_data = "bye")
    markup.add(off_button, ping_button, status_button, bye_button)
    bot.send_message(message.chat.id, "–ß—Ç–æ... –•–æ–∑—è–∏–Ω... –ù–Ω–∞–¥–æ?? ", reply_markup = markup)
    
#–õ–æ–≥–∏–∫–∞ —Ä–∞–±–æ—Ç—ã –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
@bot.callback_query_handler(func = lambda call:True)
def callback_inline_main(call):

    if call.message:
        if call.data == "mainmenu":
            markup_back = types.InlineKeyboardMarkup(row_width=1)
            off_button = types.InlineKeyboardButton(text="–í—ã–∫–ª—é—á–∏—Ç—å —Å–µ—Ä–≤–µ—Ä–∞", callback_data="off")
            ping_button = types.InlineKeyboardButton(text="–ü–∏–Ω–≥–∞–Ω—É—Ç—å —Å–µ—Ä–≤–µ—Ä–∞", callback_data="ping")
            status_button = types.InlineKeyboardButton(text="–û—à–∏–±–∫–∏ —Å–µ—Ä–≤–µ—Ä–æ–≤", callback_data="status")
            bye_button = types.InlineKeyboardButton(text="–û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –±–æ—Ç–∞", callback_data="bye")
            markup_back.add(off_button, ping_button, status_button, bye_button)
            bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text="–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ: ",reply_markup=markup_back)
            bot.clear_step_handler_by_chat_id(chat_id=call.message.chat.id)
        elif call.data == "mainlines":
            markup_lines = types.InlineKeyboardMarkup(row_width=3)
            line_01 = types.InlineKeyboardButton(text=line_name_01, callback_data="line_01")
            line_02 = types.InlineKeyboardButton(text=line_name_02, callback_data="line_02")
            line_03 = types.InlineKeyboardButton(text=line_name_03, callback_data="line_03")
            line_04 = types.InlineKeyboardButton(text=line_name_04, callback_data="line_04")
            line_05 = types.InlineKeyboardButton(text=line_name_05, callback_data="line_05")
            line_06 = types.InlineKeyboardButton(text=line_name_06, callback_data="line_06")
            line_07 = types.InlineKeyboardButton(text=line_name_07, callback_data="line_07")
            line_08 = types.InlineKeyboardButton(text=line_name_08, callback_data="line_08")
            line_09 = types.InlineKeyboardButton(text=line_name_09, callback_data="line_09")
            line_10 = types.InlineKeyboardButton(text=line_name_10, callback_data="line_10")
            line_11 = types.InlineKeyboardButton(text=line_name_11, callback_data="line_11")
            line_12 = types.InlineKeyboardButton(text=line_name_12, callback_data="line_12")
            backbutton = types.InlineKeyboardButton(text="üîô –≤ –º–µ–Ω—é", callback_data="mainmenu")
            markup_lines.add(line_01,line_02,line_03,line_04,line_05,line_06,line_07,line_08,line_09,line_10,line_11,line_12,backbutton)
            bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text="–í—ã–±–µ—Ä–∏—Ç–µ –ª–∏–Ω–∏—é –ú–ú: ",reply_markup=markup_lines)
#            bot.clear_step_handler_by_chat_id(chat_id=call.message.chat.id)

 #–õ–æ–≥–∏–∫–∞ —Ä–∞–±–æ—Ç—ã –∫–Ω–æ–ø–∫–∏ –í—ã–∫–ª—é—á–µ–Ω–∏—è       
        elif call.data == "off":
            keyboard_off = types.InlineKeyboardMarkup(row_width=2)
            chooseline = types.InlineKeyboardButton(text="–í—ã–±–µ—Ä–∏—Ç–µ –ª–∏–Ω–∏—é", callback_data="mainlines")
            backbutton = types.InlineKeyboardButton(text="üîô –ö –º–µ–Ω—é", callback_data="mainmenu")            
            keyboard_off.add(chooseline, backbutton)
            msg = bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text="–ì–¥–µ ‚ò£–≤—ã–∫–ª—é—á–∏—Ç—å‚ò£ —Å–µ—Ä–≤–µ—Ä–∞? ", reply_markup=keyboard_off)
#            bot.register_next_step_handler(msg, station_name_off)
            
 #–õ–æ–≥–∏–∫–∞ —Ä–∞–±–æ—Ç—ã –∫–Ω–æ–ø–∫–∏ C—Ç–∞—Ç—É—Å–∞       
        elif call.data == "status":
            keyboard_status = types.InlineKeyboardMarkup(row_width=2)
            chooseline = types.InlineKeyboardButton(text="–í—ã–±–µ—Ä–∏—Ç–µ –ª–∏–Ω–∏—é", callback_data="mainlines")
            backbutton = types.InlineKeyboardButton(text="üîô –ö –º–µ–Ω—é", callback_data="mainmenu")            
            keyboard_status.add(chooseline, backbutton)
            msg = bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text="–ì–¥–µ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –∑–¥–æ—Ä–æ–≤—å–µ —Å–µ—Ä–≤–µ—Ä–∞? ", reply_markup=keyboard_status)
#            bot.register_next_step_handler(msg, station_name_status)
            
#–õ–æ–≥–∏–∫–∞ —Ä–∞–±–æ—Ç—ã –∫–Ω–æ–ø–∫–∏ –ø–∏–Ω–≥        
        elif call.data == "ping":
            keyboard_ping = types.InlineKeyboardMarkup(row_width=2)
            chooseline = types.InlineKeyboardButton(text="–í—ã–±–µ—Ä–∏—Ç–µ –ª–∏–Ω–∏—é", callback_data="mainlines")
            backbutton = types.InlineKeyboardButton(text="üîô –ö –º–µ–Ω—é", callback_data="mainmenu")           
            keyboard_ping.add(chooseline, backbutton)
            msg = bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text="–ì–¥–µ –ü–ò–ù–ì–ê–ù–£–¢–¨ —Å–µ—Ä–≤–µ—Ä–∞? ", reply_markup=keyboard_ping)
#            bot.register_next_step_handler(msg, station_name_ping)
            
#–õ–æ–≥–∏–∫–∞ —Ä–∞–±–æ—Ç—ã –∫–Ω–æ–ø–∫–∏ –ø–æ–∫–∞
        elif call.data == "bye":
           bot.send_message(call.message.chat.id, "–£–¥–∞—á–∏, –¥—Ä—É–≥!")
           bot.clear_step_handler_by_chat_id(chat_id=call.message.chat.id)


        elif call.data == "line_01":
            markup_line_01 = types.InlineKeyboardMarkup(row_width = 2)
            line_01_station_01 = types.InlineKeyboardButton(text="01_–ë—É–ª—å–≤–∞—Ä –†–æ–∫–æ—Å—Å–æ–≤—Å–∫–æ–≥–æ", callback_data="line_01_station_01")
            line_01_station_02 = types.InlineKeyboardButton(text="02_–ß–µ—Ä–∫–∏–∑–æ–≤—Å–∫–∞—è", callback_data="line_01_station_02")
            line_01_station_03 = types.InlineKeyboardButton(text="03_–ü—Ä–µ–æ–±—Ä–∞–∂–µ–Ω—Å–∫–∞—è –ø–ª–æ—â–∞–¥—å", callback_data="line_01_station_03")
            line_01_station_04 = types.InlineKeyboardButton(text="04_–°–æ–∫–æ–ª—å–Ω–∏–∫–∏", callback_data="line_01_station_04")
            line_01_station_05 = types.InlineKeyboardButton(text="05_–ö—Ä–∞—Å–Ω–æ—Å–µ–ª—å—Å–∫–∞—è", callback_data="line_01_station_05")
            line_01_station_06 = types.InlineKeyboardButton(text="06_–ö–æ–º—Å–æ–º–æ–ª—å—Å–∫–∞—è", callback_data="line_01_station_06")
            line_01_station_07 = types.InlineKeyboardButton(text="07_–ö—Ä–∞—Å–Ω—ã–µ –≤–æ—Ä–æ—Ç–∞", callback_data="line_01_station_07")
            line_01_station_08 = types.InlineKeyboardButton(text="08_–ß–∏—Å—Ç—ã–µ –ø—Ä—É–¥—ã", callback_data="line_01_station_08")
            line_01_station_09 = types.InlineKeyboardButton(text="09_–õ—É–±—è–Ω–∫–∞", callback_data="line_01_station_09")
            line_01_station_10 = types.InlineKeyboardButton(text="10_–û—Ö–æ—Ç–Ω—ã–π —Ä—è–¥", callback_data="line_01_station_10")
            line_01_station_11 = types.InlineKeyboardButton(text="11_–ë–∏–±–ª–∏–æ—Ç–µ–∫–∞ –õ–µ–Ω–∏–Ω–∞", callback_data="line_01_station_11")
            line_01_station_12 = types.InlineKeyboardButton(text="12_–ö—Ä–æ–ø–æ—Ç–∫–∏–Ω—Å–∫–∞—è", callback_data="line_01_station_12")
            line_01_station_13 = types.InlineKeyboardButton(text="13_–ü–∞—Ä–∫ –ö—É–ª—å—Ç—É—Ä—ã", callback_data="line_01_station_13")
            line_01_station_14 = types.InlineKeyboardButton(text="14_–§—Ä—É–Ω–∑–µ–Ω—Å–∫–∞—è", callback_data="line_01_station_14")
            line_01_station_15 = types.InlineKeyboardButton(text="15_–°–ø–æ—Ä—Ç–∏–≤–Ω–∞—è", callback_data="line_01_station_15")
            line_01_station_16 = types.InlineKeyboardButton(text="16_–í–æ—Ä–æ–±—å–µ–≤—ã –≥–æ—Ä—ã", callback_data="line_01_station_16")
            line_01_station_17 = types.InlineKeyboardButton(text="17_–£–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç", callback_data="line_01_station_17")
            line_01_station_18 = types.InlineKeyboardButton(text="18_–ü—Ä–æ—Å–ø–µ–∫—Ç –í–µ—Ä–Ω–∞–¥—Å–∫–æ–≥–æ", callback_data="line_01_station_18")
            line_01_station_19 = types.InlineKeyboardButton(text="19_–Æ–≥–æ-–ó–∞–ø–∞–¥–Ω–∞—è", callback_data="line_01_station_19")
            line_01_station_20 = types.InlineKeyboardButton(text="20_–¢—Ä–æ–ø–∞—Ä—ë–≤–æ", callback_data="line_01_station_20")
            line_01_station_21 = types.InlineKeyboardButton(text="21_–†—É–º—è–Ω—Ü–µ–≤–æ", callback_data="line_01_station_21")
            line_01_station_22 = types.InlineKeyboardButton(text="22_–°–∞–ª–∞—Ä—å–µ–≤–æ", callback_data="line_01_station_22")
            back_to_lines = types.InlineKeyboardButton(text="üîô –ö –≤—ã–±–æ—Ä—É –ª–∏–Ω–∏–∏", callback_data="mainlines")
            markup_line_01.add(line_01_station_01, back_to_lines)
            bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text="–í—ã–±–µ—Ä–∏—Ç–µ –°—Ç–∞–Ω—Ü–∏—é –ú–ú: ",reply_markup=markup_line_01)

        elif call.data == "line_01_station_01":
        	print (callback_data)
        	bot.send_message(call.message.chat.id, callback_data)
#        	bot.clear_step_handler_by_chat_id(chat_id=call.message.chat.id)




            
                        





















#–õ–æ–≥–∏–∫–∞ —Ä–∞–±–æ—Ç—ã —Ñ—É–Ω–∫—Ü–∏–∏ –≤—ã–∫–ª—é—á–µ–Ω–∏—è
def station_name_off(message):
      bot.send_message(message.chat.id, "‚ö†–°–µ–π—á–∞—Å –±—É–¥–µ—Ç –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç—å –≤—ã–∫–ª—é—á–µ–Ω–∏–µ —Å–µ—Ä–≤–µ—Ä–æ–≤!‚ö†\n\n–ó–∞–ø—É—â–µ–Ω–∞ –º–∞–≥–∏—è –≤—ã–∫–ª—é—á–µ–Ω–∏—è, –æ–∂–∏–¥–∞–π—Ç–µ... "+ "üßô")
      ansible_station = subprocess.run('ansible-playbook -l ' + message.text + '_IPMI /etc/ansible/playbooks/ping.yaml', capture_output=True, shell=True, encoding="utf-8").stdout
      ansible_station = ansible_station[ansible_station.find('PLAY RECAP'):]
      ansible_station = re.sub(r'\b\d*\.\d*\.\d*\.188\b', '–°–µ—Ä–≤–µ—Ä 1', ansible_station)
      ansible_station = re.sub(r'\b\d*\.\d*\.\d*\.189\b', '–°–µ—Ä–≤–µ—Ä 2', ansible_station)
      ansible_station = re.sub(r'\b\d*\.\d*\.\d*\.190\b', '–°–µ—Ä–≤–µ—Ä 3', ansible_station)
      ansible_station = ansible_station.replace('skipped=0','').replace('rescued=0','').replace('ignored=0','').replace('*','').replace('changed=0', '').replace('failed=0', '')
      ansible_station = ansible_station.replace('PLAY RECAP','–û—Ç—á–µ—Ç –æ –≤—ã–∫–ª—é—á–µ–Ω–∏–∏ —Å–µ—Ä–≤–µ—Ä–æ–≤ –Ω–∞ —Å—Ç–∞–Ω—Ü–∏–∏: ' + message.text)
      ansible_station = ansible_station.replace('ok=1', '–í—ã–∫–ª—é—á–∏–ª—Å—è? ' + "‚úÖ").replace('ok=0', '–í—ã–∫–ª—é—á–∏–ª—Å—è? ' + "‚ùå")
      ansible_station = ansible_station.replace('unreachable=1', 'IMM2 –¥–æ—Å—Ç—É–ø–µ–Ω ' + "‚ùå").replace('unreachable=0', '')
      try:
         bot.reply_to(message, ansible_station)
      except:
         bot.reply_to(message, "–¢—ã —á—Ç–æ —Ç–≤–æ—Ä–∏—à—å?? –ù–æ—Ä–º–∞–ª—å–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Å—Ç–∞–Ω—Ü–∏–∏ –í–≤–µ–¥–∏!\n\n/start")
         keyboard = types.InlineKeyboardMarkup()
         backbutton = types.InlineKeyboardButton(text="üîô", callback_data="mainmenu")
         keyboard.add(backbutton)
         bot.edit_message_text(chat_id=call.message.chat.id,message_id=call.message.message_id, text="–í–æ–∑–≤—Ä–∞—Ç –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é",reply_markup=keyboard)
         
#–õ–æ–≥–∏–∫–∞ —Ä–∞–±–æ—Ç—ã —Ñ—É–Ω–∫—Ü–∏–∏ –ø–∏–Ω–≥         
def station_name_ping(message):
      bot.send_message(message.chat.id, "–°–µ–π—á–∞—Å –ø—Ä–æ–≤–µ—Ä–∏–º –ø–∏–Ω–≥ –¥–æ —Å–µ—Ä–≤–µ—Ä–æ–≤!\n\n–ó–∞–ø—É—â–µ–Ω–∞ –º–∞–≥–∏—è –ø–∏–Ω–≥–∞, –æ–∂–∏–¥–∞–π—Ç–µ... "+ "üßô")
      ansible_station = subprocess.run('ansible-playbook -l ' + message.text + '_IPMI /etc/ansible/playbooks/ping.yaml', capture_output=True, shell=True, encoding="utf-8").stdout
      ansible_station = ansible_station[ansible_station.find('PLAY RECAP'):]
      ansible_station = re.sub(r'\b\d*\.\d*\.\d*\.1\b', '–°–µ—Ä–≤–µ—Ä 1', ansible_station)
      ansible_station = re.sub(r'\b\d*\.\d*\.\d*\.2\b', '–°–µ—Ä–≤–µ—Ä 2', ansible_station)
      ansible_station = re.sub(r'\b\d*\.\d*\.\d*\.3\b', '–°–µ—Ä–≤–µ—Ä 3', ansible_station)
      ansible_station = ansible_station.replace('skipped=0','').replace('rescued=0','').replace('ignored=0','').replace('*','').replace('changed=0', '').replace('failed=0', '')
      ansible_station = ansible_station.replace('PLAY RECAP','–û—Ç—á–µ—Ç –æ –≤—ã–∫–ª—é—á–µ–Ω–∏–∏ —Å–µ—Ä–≤–µ—Ä–æ–≤ –Ω–∞ —Å—Ç–∞–Ω—Ü–∏–∏: ' + message.text)
      ansible_station = ansible_station.replace('ok=1', '–í—ã–∫–ª—é—á–∏–ª—Å—è? ' + "‚úÖ").replace('ok=0', '–í—ã–∫–ª—é—á–∏–ª—Å—è? ' + "‚ùå")
      ansible_station = ansible_station.replace('unreachable=1', 'IMM2 –¥–æ—Å—Ç—É–ø–µ–Ω ' + "‚ùå").replace('unreachable=0', "")
      try:
         bot.reply_to(message, ansible_station)
      except:
         bot.reply_to(message, "–¢—ã —á—Ç–æ —Ç–≤–æ—Ä–∏—à—å?? –ù–æ—Ä–º–∞–ª—å–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Å—Ç–∞–Ω—Ü–∏–∏ –í–≤–µ–¥–∏!\n\n/start")
         keyboard = types.InlineKeyboardMarkup()
         backbutton = types.InlineKeyboardButton(text="üîô", callback_data="mainmenu")
         keyboard.add(backbutton)
         bot.edit_message_text(chat_id=call.message.chat.id,message_id=call.message.message_id, text="–í–æ–∑–≤—Ä–∞—Ç –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é",reply_markup=keyboard)
         
#–õ–æ–≥–∏–∫–∞ —Ä–∞–±–æ—Ç—ã —Ñ—É–Ω–∫—Ü–∏–∏ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞  
def station_name_status(message):
      bot.send_message(message.chat.id, "–°–µ–π—á–∞—Å –ø—Ä–æ–≤–µ—Ä–∏–º –∑–¥–æ—Ä–æ–≤—å–µ —Å–µ—Ä–≤–µ—Ä–æ–≤!\n\n–ó–∞–ø—É—â–µ–Ω–∞ –º–∞–≥–∏—è —Å—Ç–∞—Ç—É—Å–∞, –æ–∂–∏–¥–∞–π—Ç–µ... "+ "üßô")
      ansible_station = subprocess.run('ansible-playbook -l ' + message.text + '_IPMI /etc/ansible/playbooks/ping.yaml', capture_output=True, shell=True, encoding="utf-8").stdout
      ansible_station = ansible_station[ansible_station.find('PLAY RECAP'):]
      ansible_station = re.sub(r'\b\d*\.\d*\.\d*\.188\b', '–°–µ—Ä–≤–µ—Ä 1', ansible_station)
      ansible_station = re.sub(r'\b\d*\.\d*\.\d*\.189\b', '–°–µ—Ä–≤–µ—Ä 2', ansible_station)
      ansible_station = re.sub(r'\b\d*\.\d*\.\d*\.190\b', '–°–µ—Ä–≤–µ—Ä 3', ansible_station)
      ansible_station = ansible_station.replace('skipped=0','').replace('rescued=0','').replace('ignored=0','').replace('*','').replace('changed=0', '').replace('failed=0', '')
      ansible_station = ansible_station.replace('PLAY RECAP','–û—Ç—á–µ—Ç –æ –≤—ã–∫–ª—é—á–µ–Ω–∏–∏ —Å–µ—Ä–≤–µ—Ä–æ–≤ –Ω–∞ —Å—Ç–∞–Ω—Ü–∏–∏: ' + message.text)
      ansible_station = ansible_station.replace('ok=1', '–í—ã–∫–ª—é—á–∏–ª—Å—è? ' + "‚úÖ").replace('ok=0', '–í—ã–∫–ª—é—á–∏–ª—Å—è? ' + "‚ùå")
      ansible_station = ansible_station.replace('unreachable=1', 'IMM2 –¥–æ—Å—Ç—É–ø–µ–Ω ' + "‚ùå").replace('unreachable=0', "‚úÖ")
      try:
         bot.reply_to(message, ansible_station)
      except:
         bot.reply_to(message, "–¢—ã —á—Ç–æ —Ç–≤–æ—Ä–∏—à—å?? –ù–æ—Ä–º–∞–ª—å–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Å—Ç–∞–Ω—Ü–∏–∏ –í–≤–µ–¥–∏!\n\n/start")
         keyboard = types.InlineKeyboardMarkup()
         backbutton = types.InlineKeyboardButton(text="üîô", callback_data="mainmenu")
         keyboard.add(backbutton)
         bot.edit_message_text(chat_id=call.message.chat.id,message_id=call.message.message_id, text="–í–æ–∑–≤—Ä–∞—Ç –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é",reply_markup=keyboard)

#–ß—Ç–æ–±—ã –Ω–µ –ø–∞–¥–∞–ª
if __name__ == '__main__':
    while True:
        try:
            bot.polling(none_stop = True)
        except:
            time.sleep(10)
            
